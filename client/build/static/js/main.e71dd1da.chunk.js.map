{"version":3,"sources":["actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/Login/login.js","components/Login/register.js","components/Gen/landing.js","components/Gen/logo192.png","components/Gen/NavBar.js","components/private-routes/PrivateUserRoute.js","components/private-routes/PrivateAdminRoute.js","App.js","index.js"],"names":["GET_ERRORS","USER_LOADING","SET_CURRENT_USER","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","type","payload","errors","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","loginUser","userData","dispatch","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","catch","err","response","logoutUser","removeItem","connect","props","username","setUsername","useState","password","setPassword","error","setError","history","useHistory","useEffect","push","_jsx","className","children","_jsxs","Container","Form","noValidate","onSubmit","e","preventDefault","Group","Label","Control","required","id","placeholder","onChange","target","value","tabIndex","isInvalid","usernamenotfound","classnames","invalid","Feedback","autoComplete","passwordincorrect","Button","variant","Link","to","registerUser","withRouter","fname","setfName","lname","setlName","m_initial","setMInitial","discord","setDiscord","uin","setUIN","email","setEmail","password2","setPassword2","newUser","first_name","last_name","Row","Col","name","registerEmail","registerUsername","registerPassword","registerPassword2","registerDiscord","isLoading2","setLoading2","loggedIn","setLoggedIn","useSpring","opacity","from","delay","React","Fragment","Spinner","animation","href","admin","setAdminNav","setUserNav","role","Navbar","collapseOnSelect","expand","fluid","Brand","alt","src","logo","width","height","Toggle","Collapse","Nav","onClick","screenText","_ref","component","Component","rest","Route","render","Redirect","jwtToken","currentTime","Date","now","exp","location","App","Provider","Router","NavBar","exact","path","Landing","Switch","Login","Register","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71dd1da.chunk.js","sourcesContent":["/**\n * types module to define different user types\n * @module types\n */\n\n/**\n * string for getting errors\n * @type {string}\n */\nexport const GET_ERRORS = \"GET_ERRORS\";\n\n/**\n * string for user thats loading\n * @type {string}\n */\nexport const USER_LOADING = \"USER_LOADING\";\n\n/**\n * string for user being set\n * @type {string}\n */\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function errorReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\n/**\n * An Object with our rootReducer and user initial state\n * Object\n */\nexport default store;\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/users/register\", userData)\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\n\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n      // Set token to localStorage\n      // console.log(res);\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      // Set token to Auth header\n      setAuthToken(token);\n\n      // Decode token to get user data\n      const decoded = jwt_decode(token);    \n\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n\n  // Remove auth header for future requests\n  setAuthToken(false);\n\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","/**\n * A module that creates and returns a React component that users use to log into their account.\n * @module Login\n */\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport classnames from \"classnames\";\n\n\n/**\n * A function that formats and returns a React component for people to use as they log in to their accounts.\n * @param {Object} props - the decoded user payload\n * @returns {Object} - The html for the react component\n */\nfunction Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    // console.log(props.auth);\n    if (props.auth.isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [history, props.auth, props.auth.isAuthenticated]);\n\n  useEffect(() => {\n    // console.log(props.errors);\n    setError(props.errors);\n  }, [props.errors]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n      username: username,\n      password: password,\n    };\n    props.loginUser(userData);\n    \n  };\n\n  return (\n    <div className=\"Login\">\n      <Container>\n        <h2 className=\"display-2 text-center\">Login</h2>\n        <Form noValidate onSubmit={onSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Username</b>\n            </Form.Label>\n            <Form.Control\n              type=\"username\"\n              required\n              id=\"username\"\n              placeholder=\"Enter username\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n              tabIndex={1}\n              isInvalid={!!error.username || !!error.usernamenotfound}\n              className={classnames(\"\", {\n                invalid: error.username || error.usernamenotfound,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.username}\n              {error.usernamenotfound}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Password</b>\n            </Form.Label>\n            <Form.Control\n              type=\"password\"\n              required\n              id=\"password\"\n              autoComplete=\"true\"\n              placeholder=\"Enter password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              tabIndex={2}\n              isInvalid={!!error.password || !!error.passwordincorrect}\n              className={classnames(\"\", {\n                invalid: error.password || error.passwordincorrect,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.password}\n              {error.passwordincorrect}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        <div className=\"text-center\">\n          <p className=\"fs-5\">\n            Don't have an account? <Link to=\"/register\">Register here!</Link>\n          </p>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","/**\n * A module that creates and returns a React component that users use to register for an account.\n * @module Register\n */\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory, Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport classnames from \"classnames\";\n\n/**\n * A function that formats and returns a React component for people to use as they register for their accounts.\n * @param {Object} props - the decoded user payload\n * @returns {Object} - The html for the react component\n */\nfunction Register(props) {\n  const [fname, setfName] = useState(\"\");\n  const [lname, setlName] = useState(\"\");\n  const [m_initial, setMInitial] = useState(\"\");\n  const [discord, setDiscord] = useState(\"\");\n  const [uin, setUIN] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [error, setError] = useState({});\n  const history = useHistory();\n\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [history, props.auth, props.auth.isAuthenticated]);\n\n  useEffect(() => {\n    setError(props.errors);\n  }, [props.errors]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      first_name: fname,\n      last_name: lname,\n      m_initial: m_initial, \n      email: email,\n      username: username,\n      password: password,\n      password2: password2,\n      discord: discord,\n      uin: uin,\n    };\n    props.registerUser(newUser, history);\n  };\n\n  return (\n    <div className=\"Register\">\n      <Container>\n        <h2 className=\"display-2 text-center\">Register</h2>\n        <Form noValidate onSubmit={onSubmit}>\n          <Row>\n            <Col>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>\n                  <b>First name</b>\n                </Form.Label>\n                <Form.Control\n                  onChange={(e) => setfName(e.target.value)}\n                  required\n                  value={fname}\n                  isInvalid={error.name}\n                  id=\"fname\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: error.name,\n                  })}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {error.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>\n                  <b>Middle Initial</b>\n                </Form.Label>\n                <Form.Control\n                  onChange={(e) => setMInitial(e.target.value)}\n                  required\n                  value={m_initial}\n                  isInvalid={error.name}\n                  id=\"m_initial\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: error.name,\n                  })}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {error.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>\n                  <b>Last name</b>\n                </Form.Label>\n                <Form.Control\n                  onChange={(e) => setlName(e.target.value)}\n                  required\n                  value={lname}\n                  isInvalid={error.name}\n                  id=\"lname\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: error.name,\n                  })}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {error.name}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>UIN</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setUIN(e.target.value)}\n              value={uin}\n              isInvalid={!!error.uin}\n              id=\"uin\"\n              type=\"text\"\n              className={classnames(\"\", {\n                invalid: error.uin,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.uin}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Email Address</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              isInvalid={!!error.registerEmail}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: error.registerEmail,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.registerEmail}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Username</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setUsername(e.target.value)}\n              required\n              value={username}\n              isInvalid={!!error.registerUsername}\n              id=\"username\"\n              type=\"text\"\n              className={classnames(\"\", {\n                invalid: error.registerUsername,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.registerUsername}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Password</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              isInvalid={error.registerPassword}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: error.registerPassword,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.registerPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Confirm Password</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setPassword2(e.target.value)}\n              value={password2}\n              isInvalid={error.registerPassword2}\n              id=\"password2\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: error.registerPassword2,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.registerPassword2}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Discord</b>\n            </Form.Label>\n            <Form.Control\n              onChange={(e) => setDiscord(e.target.value)}\n              required\n              value={discord}\n              isInvalid={!!error.registerDiscord}\n              id=\"discord\"\n              type=\"text\"\n              className={classnames(\"\", {\n                invalid: error.registerDiscord,\n              })}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {error.registerDiscord}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <div className=\"text-center\">\n          <p className=\"fs-5\">\n            Already have an account? <Link to=\"/login\">Login here!</Link>\n          </p>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import { Container, Button, Nav, Spinner } from \"react-bootstrap\";\nimport { useSpring, animated } from \"react-spring\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport React, { useState, useEffect } from \"react\";\nimport { loginUser } from \"../../actions/authActions\";\nimport axios from \"axios\";\n\nfunction Landing(props) {\n\n  const [isLoading2, setLoading2] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (props.auth.isAuthenticated) {\n      setLoggedIn(true);\n     \n    } else {\n      setLoggedIn(false);\n    }\n  }, [props.auth, props.auth.isAuthenticated]);\n\n  const springProps = useSpring({\n    to: { opacity: 1 },\n    from: { opacity: 0 },\n    delay: 100,\n  });\n\n  return (\n    <div className=\"Landing\">\n      <Container>\n        {!loggedIn ? (\n          <React.Fragment>\n            <br></br><br></br><br></br>\n            <h2 className=\"display-8 text-center\">\n              Please <a href=\"/login\">Log In</a> or <a href=\"/register\">Register</a>!\n            </h2>\n            <br></br><br></br>\n          </React.Fragment>\n        ): (\n          <React.Fragment>\n            {isLoading2 ? (\n              <div className=\"d-flex justify-content-center\">\n                <Spinner animation=\"border\" />\n              </div>\n            ):(\n              <React.Fragment>\n                <br></br><br></br><br></br>\n                  <h2 className=\"display-3 text-center\">\n                    Welcome to TAMU CyberSecurity Club {props.auth.user.first_name}!\n                  </h2>\n              </React.Fragment>\n            )}\n          \n          </React.Fragment>\n        )}\n        \n      </Container>\n    </div>\n  );\n}\n\nLanding.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { loginUser })(Landing);\n","export default __webpack_public_path__ + \"static/media/logo192.31be1d26.png\";","/**\n * A module that creates a NavBar using React. Depending on what user role you have, the navbar will contain different links\n * @module NavBar\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\nimport logo from \"./logo192.png\";\n\n/**\n * A function that lays out and returns a React component for the navbar\n * @param {Object} props - the decoded user payload\n * @returns {Object} - The HTML for the React Component\n */\nfunction NavBar(props) {\n    // State Management\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [admin, setAdminNav] = useState(false);\n    const [user, setUserNav] = useState(false);\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            setLoggedIn(true);\n        } else {\n            setLoggedIn(false);\n            setAdminNav(false);\n        }\n        if (props.auth.user.role === \"admin\") {\n            setAdminNav(true);\n            setUserNav(false);\n        }\n        if (props.auth.user.role === \"user\"){\n            setUserNav(true);\n            setAdminNav(false);\n        }\n\n    }, [props.auth, props.auth.isAuthenticated]);\n\n    const onLogoutClick = (e) => {\n        e.preventDefault();\n        props.logoutUser();\n        setLoggedIn(false);\n    };\n\n    return (\n        <div className=\"Navbar shadow-sm\">\n            <Navbar collapseOnSelect expand=\"lg\">\n                <Container fluid>\n                    <Navbar.Brand href=\"/\">\n                        <img\n                            alt=\"logo\"\n                            src={logo}\n                            width=\"auto\"\n                            height=\"30\"\n                            className=\"d-inline-block align-top mr-2\"\n                        />\n                        TAMU CyberSecurity Club\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                        {user && \n                        <React.Fragment>\n                            {loggedIn && <Nav.Link href=\"/menu\">Menu</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/bag\">Bag</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/settings\">Settings</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/help\">Help</Nav.Link>}\n                        </React.Fragment>\n                        }\n                        {admin &&\n                        <React.Fragment>\n                            {loggedIn && <Nav.Link href=\"/processOrders\">Process Orders</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/adjustMenu\">Adjust Menu</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/addMenuItem\">Add Menu Item</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/reports\">Reports</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/settings\">Settings</Nav.Link>}\n                            {loggedIn && <Nav.Link href=\"/help\">Help</Nav.Link>}\n                        </React.Fragment>\n                        }                            \n                        </Nav>\n                        <Nav>\n                            {!loggedIn && <Nav.Link href=\"/login\">Login</Nav.Link>}\n                            {!loggedIn && <Nav.Link href=\"/register\">Register</Nav.Link>}\n                            {loggedIn && <Nav.Link onClick={onLogoutClick}>{screenText[\"Logout\"]}</Nav.Link>}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\nNavBar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(NavBar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateUserRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true && (auth.user.role === \"user\" || auth.user.role === \"admin\") ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateUserRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateUserRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateAdminRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated === true && auth.user.role === \"admin\" ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateAdminRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);\n","/**\n * @file App.js - Creates an application using all the different routes to connect to our react components\n */\n\n//Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login/login\";\nimport Register from \"./components/Login/register\";\nimport Landing from \"./components/Gen/landing\";\nimport NavBar from \"./components/Gen/NavBar\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport jwt_decode from \"jwt-decode\";\nimport PrivateUserRoute from \"./components/private-routes/PrivateUserRoute\";\nimport PrivateAdminRoute from \"./components/private-routes/PrivateAdminRoute\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\n/**\n * A function that sets each route to the component it is assigned to\n * @returns React html\n */\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Route exact path=\"/\" component={Landing} />\n          <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              {/* <PrivateOnlineUserRoute exact path=\"/settings\" component={UserSettings} />\n              <PrivateUserRoute exact path=\"/bag\" component={UserBag} />\n              <PrivateUserRoute exact path=\"/help\" component={Help} />\n              <PrivateCashierRoute exact path=\"/processOrders\" component={ProcessOrders} />\n              <PrivateManagerRoute exact path=\"/adjustMenu\" component={AdjustMenu} />\n              <PrivateManagerRoute exact path=\"/reports\" component={Reports} />\n              <PrivateManagerRoute exact path=\"/addMenuItem\" component={AddMenuItem} /> */}\n              \n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/**\n * @file index.js - A file to render our root html\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}